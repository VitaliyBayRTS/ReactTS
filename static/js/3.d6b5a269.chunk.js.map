{"version":3,"sources":["hoc/witAuthRedirect.tsx","component/Profile/MyProfile/MyProfile.module.scss","assets/img/socialNetworkIcon/facebook.svg","assets/img/socialNetworkIcon/github.svg","assets/img/socialNetworkIcon/instagram.svg","assets/img/socialNetworkIcon/mainLink.svg","assets/img/socialNetworkIcon/twitter.svg","assets/img/socialNetworkIcon/vk.svg","assets/img/socialNetworkIcon/website.svg","assets/img/socialNetworkIcon/youtube.svg","component/Profile/MyPosts/MyPosts.module.scss","component/Profile/MyPosts/Posts/Post.module.scss","component/Profile/MyProfile/ProfileStatusWithHook.tsx","component/Profile/MyProfile/ProfileDataForm.tsx","component/Profile/MyProfile/Profile.tsx","component/Profile/MyPosts/Posts/Post.tsx","component/Profile/MyPosts/MyPosts.tsx","component/Profile/MyPosts/MyPostsContainer.tsx","component/Profile/Profile.tsx","component/Profile/ProfileContainer.tsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHook","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","onChange","e","currentTarget","value","onBlur","updateUserStatusThunk","autoFocus","ProfileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","error","className","commonError","Field","placeholder","name","component","Input","validate","Textarea","type","Object","keys","initialValues","contacts","map","key","s","contactItem","ProfileData","profileInfo","changeEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","itemBox","contactKey","contactValue","icon","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Contacts","img","cn","default","href","target","src","alt","MyProfile","Preloader","profileBox","imgBox","userPhoto","photos","large","UserPhoto","id","files","length","savePhoto","htmlFor","btn","dataForm","saveProfileInfo","then","Post","item","text","like","maxLength20","maxLength","AddReduxForm","MyPosts","PostDataElements","postData","p","post_box","addPost","postBody","console","log","MyPostsContainer","profilePage","PostData","dispatch","profileActions","addPostActionCreator","Profile","ProfileClass","userId","match","params","autorizedUserId","getProfileThunk","getUserStatusThunk","updateProfile","prevProps","prevState","profile","compose","withRouter"],"mappings":"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","file":"static/js/3.d6b5a269.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { stateType } from \"../redux/redux-store\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToProps = (state: stateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n} \r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any> {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/> // If user doesnt authorized, \r\n                                                                //program redirect him to login page\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectAuthRedirectComponent = connect<mapStateToPropsType, {}, {}, stateType>\r\n    (mapStateToProps, {})(RedirectComponent)\r\n\r\n    return connectAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBox\":\"MyProfile_profileBox__IggPv\",\"imgBox\":\"MyProfile_imgBox__215wF\",\"userPhoto\":\"MyProfile_userPhoto__2UN0v\",\"itemBox\":\"MyProfile_itemBox__JK5sh\",\"contactItem\":\"MyProfile_contactItem__16ssq\",\"default\":\"MyProfile_default__3FTO6\",\"btn\":\"MyProfile_btn__38zyx\"};","module.exports = __webpack_public_path__ + \"static/media/facebook.c385bbca.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.8f8edc5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.59b0c8cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLink.007eb41a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.7c14d2da.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.d2c59e7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/website.b806b669.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.2c2eb485.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_box\":\"MyPosts_post_box__1OqR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3_YZk\",\"like\":\"Post_like__18xi5\",\"name\":\"Post_name__2FtuE\"};","import React, { FunctionComponent, useState, useEffect } from 'react';\r\n// import s from './MyProfile.module.scss';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateUserStatusThunk: (status: string) => void,\r\n    isOwner: boolean\r\n}\r\n\r\nlet ProfileStatusWithHook: FunctionComponent<PropsType> = (props) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    let activeEditMode = () => {\r\n        if(props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n\r\n    let deactiveEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatusThunk(status)\r\n    }\r\n\r\n    let onChangeStatus = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activeEditMode}><b>Status: </b>{props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onChangeStatus} onBlur={deactiveEditMode} autoFocus value={status} />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React, { FunctionComponent } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../../../utilities/ReduxForm/Form';\r\nimport s from './MyProfile.module.scss';\r\nimport e from './../../../utilities/ReduxForm/ReduxForm.module.scss';\r\n\r\nconst ProfileDataForm: FunctionComponent<any> = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n        </div>\r\n        {props.error && <div className={e.commonError}> {props.error} </div>}\r\n        <div>\r\n            <b>Full Name: </b> <Field placeholder=\"Full Name\" name=\"fullName\" component={Input} validate={[]}/>\r\n        </div>\r\n        <div>\r\n            <b>About me: </b> <Field placeholder=\"About me\" name=\"aboutMe\" component={Textarea} validate={[]}/>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> <Field placeholder=\"Looking for a job\" name=\"lookingForAJob\" component={Input} \r\n                validate={[]} type=\"checkbox\"/>\r\n        </div>\r\n        <div>\r\n            <b>My profesional skills: </b> <Field placeholder=\"My profesional skills\" name=\"lookingForAJobDescription\" \r\n                component={Textarea} validate={[]}/>\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(props.initialValues.contacts).map((key: any) => {\r\n                return <div key={key} className={s.contactItem}>\r\n                    <b>{key}: </b> <Field placeholder={key} name={\"contacts.\" + key} component={Input} validate={[]}/>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'profileData'})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, { FunctionComponent, useState } from 'react';\r\nimport s from './MyProfile.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport UserPhoto from './../../../assets/img/user.jpeg';\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport facebook from '../../../assets/img/socialNetworkIcon/facebook.svg';\r\nimport github from '../../../assets/img/socialNetworkIcon/github.svg';\r\nimport instagram from '../../../assets/img/socialNetworkIcon/instagram.svg';\r\nimport mainLink from '../../../assets/img/socialNetworkIcon/mainLink.svg';\r\nimport twitter from '../../../assets/img/socialNetworkIcon/twitter.svg';\r\nimport vk from '../../../assets/img/socialNetworkIcon/vk.svg';\r\nimport website from '../../../assets/img/socialNetworkIcon/website.svg';\r\nimport youtube from '../../../assets/img/socialNetworkIcon/youtube.svg';\r\nimport cn from 'classnames';\r\nimport { profileInfoType } from '../../../types/types';\r\n\r\ninterface PropsInterface {\r\n    profileInfo: profileInfoType | null,\r\n    status: string,\r\n    isOwner: boolean,\r\n    updateUserStatusThunk: (status: string) => void,\r\n    savePhoto: (photo: File) => void,\r\n    saveProfileInfo: (profile: profileInfoType) => any\r\n}\r\n\r\nconst MyProfile: FunctionComponent<PropsInterface> = ({profileInfo, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if(!profileInfo) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const selectedPhoto = (e: any) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (dataForm: any) => {\r\n        props.saveProfileInfo(dataForm).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.profileBox}>\r\n                    <div className={s.imgBox}>\r\n                        <img className={s.userPhoto} src={profileInfo.photos.large || UserPhoto} alt=\"\"/>\r\n                        <input type=\"file\" id=\"file\" onChange={selectedPhoto}/>\r\n                        <label htmlFor=\"file\" className={s.btn}>upload</label>\r\n                    </div>\r\n                    <div>\r\n                        { editMode \r\n                            ? <ProfileDataForm initialValues={profileInfo} onSubmit={onSubmit} /> \r\n                            : <ProfileData profileInfo={profileInfo} isOwner={props.isOwner} changeEditMode={() => {setEditMode(true)}}/> }\r\n                        <ProfileStatusWithHook isOwner={props.isOwner} status={props.status} updateUserStatusThunk={props.updateUserStatusThunk}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ProfileDataType = {\r\n    profileInfo: profileInfoType,\r\n    isOwner: boolean,\r\n    changeEditMode: () => void\r\n}\r\n\r\nconst ProfileData: FunctionComponent<ProfileDataType> = ({profileInfo, isOwner, changeEditMode}) => {\r\n    return <div>\r\n        {isOwner && <button onClick={changeEditMode}>Edit Information</button>}\r\n        <div>\r\n            <b>Full Name: </b> {profileInfo.fullName}\r\n        </div>\r\n        <div>\r\n            <b>About me: </b> {profileInfo.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profileInfo.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        <div>\r\n            <b>My profesional skills: </b> {profileInfo.lookingForAJobDescription}\r\n        </div>\r\n        <div >\r\n            <b>Contacts: </b> <div className={s.itemBox}>\r\n                {Object.keys(profileInfo.contacts).map((key: string) => {\r\n                    //@ts-ignore\r\n                    return  <Contacts key={key} contactKey={key} contactValue={profileInfo.contacts[key]}/>\r\n                })}\r\n            </div> \r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype iconType = {\r\n    [key:string]: string;\r\n}\r\n\r\nconst icon: iconType = {\r\n    'facebook': facebook,\r\n    'website': website,\r\n    'vk': vk,\r\n    'twitter': twitter,\r\n    'instagram': instagram,\r\n    'youtube': youtube,\r\n    'github': github,\r\n    'mainLink': mainLink\r\n}\r\n\r\ntype ContactsType = {\r\n    contactKey: string,\r\n    contactValue: string\r\n}\r\n\r\nconst Contacts: FunctionComponent<ContactsType> = ({contactKey, contactValue}) => {\r\n    let img = icon[contactKey];\r\n    return <div className={cn({[s.contactItem]: contactValue}, s.default)}>\r\n        <a href={contactValue} target=\"_blanc\">{contactValue && <img src={img} alt={contactKey}/>}</a>\r\n    </div>\r\n}\r\n\r\nexport default MyProfile;","import React, { FunctionComponent } from 'react';\r\nimport s from './Post.module.scss';\r\n\r\ninterface PropsInterface {\r\n    text: string\r\n    like: number\r\n}\r\n\r\nconst Post: FunctionComponent<PropsInterface> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src=\"https://www.shareicon.net/data/512x512/2015/09/20/104337_avatar_512x512.png\" alt=\"\" />\r\n                <div>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n                <p className={s.like}>Like: {props.like}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, { FunctionComponent } from 'react';\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Posts/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLength } from '../../../utilities/validator/validator';\r\nimport { Textarea } from '../../../utilities/ReduxForm/Form';\r\nimport { postDataType } from '../../../types/types';\r\n\r\ninterface PropsInterface {\r\n    postData: Array<postDataType>,\r\n    addPost: (value: string) => void\r\n}\r\n\r\nconst MyPosts: FunctionComponent<PropsInterface> = (props) => {\r\n    \r\n    let PostDataElements = props.postData.map( (p: any) => <Post key={p.id} text={p.text} like={p.like} />);\r\n\r\n    let addPost = (value: any) => {\r\n        props.addPost(value.postBody);\r\n        console.log(value.postBody)\r\n    };\r\n    \r\n    return (\r\n        <div className={s.post_box}>\r\n            My post\r\n            <AddReduxForm onSubmit={addPost}/>\r\n            <div>\r\n                {PostDataElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength20 = maxLength(20);\r\n\r\nconst AddPost: FunctionComponent<any> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"postBody\" validate={[maxLength20]}/>\r\n            <button>Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddReduxForm = reduxForm({form: \"post\"})(AddPost);\r\n\r\nexport default MyPosts;","import { profileActions } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { stateType } from '../../../redux/redux-store';\r\nimport { postDataType } from '../../../types/types';\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    postData: Array<postDataType>\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (value: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: stateType): mapStateToPropsType => {\r\n    return {\r\n        postData: state.profilePage.PostData\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any): mapDispatchToPropsType => {\r\n    return {\r\n        addPost: (value: string) => {\r\n            dispatch(profileActions.addPostActionCreator(value));\r\n        }\r\n    }\r\n} \r\n\r\nconst MyPostsContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, stateType>\r\n(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, { FunctionComponent } from 'react';\r\nimport MyProfile from './MyProfile/Profile';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport { profileInfoType } from '../../types/types';\r\n\r\ninterface PropsInterface {\r\n    profileInfo: profileInfoType | null,\r\n    status: string,\r\n    isOwner: boolean,\r\n    updateUserStatusThunk: (status: string) => void,\r\n    savePhoto: (photo: File) => void,\r\n    saveProfileInfo: (profile: profileInfoType) => void\r\n}\r\n\r\nconst Profile: FunctionComponent<PropsInterface> = (props) => {\r\n    return (\r\n        <div>\r\n            <MyProfile savePhoto={props.savePhoto} \r\n                isOwner={props.isOwner} \r\n                profileInfo={props.profileInfo} \r\n                status={props.status} \r\n                updateUserStatusThunk={props.updateUserStatusThunk}\r\n                saveProfileInfo={props.saveProfileInfo}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfileThunk, getUserStatusThunk, \r\n    updateUserStatusThunk, savePhoto, saveProfileInfo} from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/witAuthRedirect';\r\nimport { profileInfoType } from '../../types/types';\r\nimport { stateType } from '../../redux/redux-store';\r\n\r\ntype mapStateToPropsType = {\r\n    profile: profileInfoType | null,\r\n    autorizedUserId: number | null,\r\n    status: string\r\n}\r\n\r\ntype OwnProps = {\r\n    match: any\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getProfileThunk: (userId: number) => void,\r\n    getUserStatusThunk: (userId: number) => void,\r\n    updateUserStatusThunk: (status: string) => void,\r\n    savePhoto: (photo: File) => void,\r\n    saveProfileInfo: (profile: profileInfoType) => void\r\n}\r\n\r\ntype MyProps = mapStateToPropsType & mapDispatchToPropsType & OwnProps;\r\n\r\ntype OwnStateType = {\r\n\r\n}\r\n\r\nclass ProfileClass extends React.Component<MyProps> {\r\n\r\n    updateProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) userId = this.props.autorizedUserId;\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getUserStatusThunk(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile();\r\n    }\r\n    componentDidUpdate(prevProps: MyProps, prevState: OwnStateType) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.updateProfile();\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profileInfo={this.props.profile}\r\n             status={this.props.status} updateUserStatusThunk={this.props.updateUserStatusThunk}\r\n            isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto} \r\n            saveProfileInfo={this.props.saveProfileInfo}/>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: stateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profileInfo,\r\n        status: state.profilePage.status,\r\n        autorizedUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, OwnProps, stateType>\r\n    (mapStateToProps, {getProfileThunk, getUserStatusThunk, updateUserStatusThunk, savePhoto, saveProfileInfo}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileClass) as React.ComponentType<any>;"],"sourceRoot":""}